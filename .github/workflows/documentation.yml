# name: Generate Documentation

# on:
#   push:
#     branches:
#       - training_lanes

# jobs:
#   generate-docs:
#     name: Generate Documentation
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Install Doxygen
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y doxygen graphviz

#       - name: Generate Documentation
#         run: |
#             python3 ./scripts/copy_readme.py
#             cd doxyfiles
#             doxygen Doxyfile

#       - name: Prepare Documentation
#         run: |
#           touch doxyfiles/docs/.nojekyll
#           rm -f doxyfiles/docs/_config.yml
#           find doxyfiles/docs -name "*.scss" -delete
      

#       - name: Deploy Documentation to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.PAT_TOKEN }}
#           publish_dir: doxyfiles/docs
#           publish_branch: gh-pages
#           force_orphan: true

# name: Generate Documentation

# on:
#   push:
#     branches:
#       - training_lanes

# jobs:
#   generate-docs:
#     name: Generate Documentation
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Install Doxygen
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y doxygen graphviz

#       - name: Generate Documentation
#         run: |
#           python3 ./scripts/copy_readme.py
#           cd doxyfiles
#           doxygen Doxyfile

#       - name: Prepare Documentation
#         run: |
#           # Add .nojekyll to bypass Jekyll processing
#           touch doxyfiles/docs/.nojekyll
#           # Remove any Jekyll config or SCSS files to prevent errors
#           rm -f doxyfiles/docs/_config.yml
#           find doxyfiles/docs -name "*.scss" -delete

#       - name: Create Pull Request
#         uses: peter-evans/create-pull-request@v5
#         with:
#           token: ${{ secrets.PAT_TOKEN }}
#           commit-message: "Deploy Doxygen documentation to gh-pages"
#           branch: gh-pages-update
#           base: gh-pages
#           title: "Update GitHub Pages documentation"
#           body: "Automated update of Doxygen documentation"
#           delete-branch: true
#           path: doxyfiles/docs

name: Generate Documentation

on:
  push:
    branches:
      - training_lanes

permissions:
  contents: write
  pull-requests: write

jobs:
  generate-docs:
    name: Generate Documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Doxygen
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz

      - name: Generate Documentation
        run: |
          python3 ./scripts/copy_readme.py
          cd doxyfiles
          doxygen Doxyfile

      - name: Prepare Documentation
        run: |
          touch doxyfiles/docs/.nojekyll
          rm -f doxyfiles/docs/_config.yml
          find doxyfiles/docs -name "*.scss" -delete
          find doxyfiles/docs -name ".git" -exec rm -rf {} +
          find doxyfiles/docs -name ".gitignore" -delete
          find doxyfiles/docs -name ".gitattributes" -delete

      - name: Stage Documentation
        run: |
          # Create a temporary directory for staging
          mkdir -p temp-docs
          # Copy doxyfiles/docs contents to temp-docs
          cp -r doxyfiles/docs/* temp-docs/
          # Checkout gh-pages branch to a temporary location
          git clone --branch gh-pages --depth 1 https://github.com/SEAME-pt/ObjectDetectionAvoidance.git temp-gh-pages
          # Remove all files in temp-gh-pages except .git
          find temp-gh-pages -maxdepth 1 -not -name ".git" -not -name "." -not -name ".." -exec rm -rf {} +
          # Copy new documentation to temp-gh-pages
          cp -r temp-docs/* temp-gh-pages/
          # Move temp-gh-pages to working directory
          rm -rf doxyfiles/docs
          mv temp-gh-pages doxyfiles/docs

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: "Update Doxygen documentation for gh-pages"
          branch: gh-pages-update
          base: gh-pages
          title: "Update GitHub Pages Documentation"
          body: |
            Automated update of Doxygen documentation from training_lanes branch.
            Replaces all existing files with latest documentation.
            Generated by [create-pull-request](https://github.com/peter-evans/create-pull-request).
          labels: documentation, automated
          delete-branch: true
          add-paths: doxyfiles/docs/*
          
# name: Generate Documentation

# on:
#   push:
#     branches:
#       - training_lanes

# jobs:
#   generate-docs:
#     name: Generate Documentation
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0  # Full history for accurate commits

#       - name: Install Doxygen
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y doxygen graphviz python3

#       - name: Create Directories
#         run: |
#           mkdir -p doxyfiles/docs
#           mkdir -p docs

#       - name: Run copy_readme.py
#         run: |
#           python3 scripts/copy_readme.py || echo "copy_readme.py failed, continuing..."
#           ls -l doxyfiles/docs

#       - name: Generate Doxygen Documentation
#         run: |
#           cd doxyfiles
#           doxygen Doxyfile
#           ls -l docs

#       - name: Copy Doxygen Output to Root Docs
#         run: |
#           cp -r doxyfiles/docs/* docs/ || echo "No files to copy from doxyfiles/docs"
#           ls -l docs

#       - name: Create .nojekyll and Minimal Files
#         run: |
#           touch docs/.nojekyll
#           mkdir -p docs/assets/css
#           echo "/* Minimal style.scss for Jekyll */" > docs/assets/css/style.scss
#           ls -l docs
#           ls -l docs/assets/css

#       - name: Commit Changes to training_lanes
#         run: |
#           git config user.name "GitHub Actions"
#           git config user.email "actions@github.com"
#           git add docs
#           git commit -m "Update docs folder with Doxygen output" || echo "No changes to commit"
#           git push origin training_lanes

#       - name: Deploy Documentation to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.PAT_TOKEN }}
#           publish_dir: docs
#           publish_branch: training_lanes
#           force_orphan: false